# https://taskfile.dev

version: "3"

vars:
  DBML_FILE: "./schema.dbml"
  DSN: "{{.DB_CONNECTION}}://{{.DB_USER}}:{{.DB_PASSWORD}}@{{.DB_HOST}}:{{.DB_PORT}}/{{.DB_NAME}}?sslmode=disable"

dotenv:
  - ".env"

tasks:
  default:
    desc: "Gettings started"
    cmds:
      - task: install

  install:
    desc: "Install dependencies"
    cmds:
      - go install github.com/go-task/task/v3/cmd/task@latest
      - go install github.com/air-verse/air@latest
      - go install -tags 'postgres' github.com/golang-migrate/migrate/v4/cmd/migrate@latest
      - go install github.com/swaggo/swag/cmd/swag@latest
      - go install github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-grpc-gateway@latest

  service:up:
    desc: "Start services"
    cmd: docker compose up -d

  service:down:
    desc: "Stop services"
    cmd: docker compose down

  dev:
    desc: "Start development server"
    cmd: air

  lint:
    desc: "Run linter"
    cmd: golangci-lint run ./...

  build:
    desc: "Build binary"
    cmd: go build -o ./bin/{{.APP_NAME}} ./cmd/app/main.go
    requires:
      vars:
        - APP_NAME

  start:
    desc: "Start binary"
    cmd: ./bin/{{.APP_NAME}}
    requires:
      vars:
        - APP_NAME

  swag:
    desc: "Generate swagger documentation"
    cmds:
      - swag fmt
      - swag init -g ./internal/app/app.go  -o ./docs --parseInternal true

  proto:gen:
    desc: "Generate proto file"
    cmds:
      - |
        cd protos && \
        protoc \
        --go_out=paths=source_relative:./gen/go \
        --go-grpc_out=paths=source_relative:./gen/go \
        --grpc-gateway_out=paths=source_relative:./gen/go \
        --openapiv2_out=logtostderr=true,json_names_for_fields=false,simple_operation_ids=true:./gen/openapi \
        -I proto \
        ./proto/mail/v1/mail.proto
